#!/usr/bin/env python3
"""
MIT-Politecnico Researcher Collaboration Mapper
Maps research collaborations between MIT and Politecnico di Milano
Focuses on quantum computing and photonics
"""

import json
from datetime import datetime
from pathlib import Path
import urllib.parse

OUTPUT_DIR = Path("C:/Projects/OSINT - Foresight/data/raw/research_collab")
OUTPUT_DIR.mkdir(parents=True, exist_ok=True)

def generate_scopus_queries():
    """Generate Scopus queries for MIT-Politecnico collaboration."""

    queries = {
        "quantum_computing": {
            "basic": 'AFFIL("Massachusetts Institute of Technology" OR MIT) AND AFFIL("Politecnico di Milano" OR "Politecnico Milano")',
            "with_keywords": 'AFFIL(MIT) AND AFFIL("Politecnico di Milano") AND KEY(quantum OR photonic OR "quantum computing" OR "quantum error correction")',
            "recent": 'AFFIL(MIT) AND AFFIL("Politecnico di Milano") AND PUBYEAR > 2021',
            "departments": 'AFFIL("MIT" AND "Research Laboratory of Electronics") AND AFFIL("Politecnico" AND "DEIB")'
        },
        "ai_collaboration": {
            "basic": 'AFFIL(Stanford) AND AFFIL("Sapienza University of Rome")',
            "with_keywords": 'AFFIL(Stanford) AND AFFIL(Sapienza) AND KEY("artificial intelligence" OR "machine learning" OR "neural network")',
            "recent": 'AFFIL(Stanford) AND AFFIL(Sapienza) AND PUBYEAR > 2022'
        }
    }

    return queries

def generate_google_scholar_queries():
    """Generate Google Scholar queries."""

    base_url = "https://scholar.google.com/scholar"

    queries = [
        {
            "description": "MIT Politecnico quantum 2023-2025",
            "query": 'MIT "Politecnico di Milano" quantum 2023..2025',
            "url": f'{base_url}?q=MIT+"Politecnico+di+Milano"+quantum+2023..2025'
        },
        {
            "description": "Stanford Sapienza AI collaboration",
            "query": 'Stanford "Sapienza University" "artificial intelligence" 2023..2025',
            "url": f'{base_url}?q=Stanford+"Sapienza+University"+"artificial+intelligence"+2023..2025'
        },
        {
            "description": "Leonardo MIT research",
            "query": 'Leonardo MIT aerospace OR defense 2020..2025',
            "url": f'{base_url}?q=Leonardo+MIT+aerospace+OR+defense+2020..2025'
        }
    ]

    return queries

def generate_orcid_queries():
    """Generate ORCID queries for researcher tracking."""

    orcid_base = "https://orcid.org/orcid-search/search"

    queries = {
        "mit_to_italy": {
            "description": "MIT researchers now at Italian institutions",
            "advanced_search": 'past-institution-affiliation-name:"Massachusetts Institute of Technology" AND current-institution-affiliation-name:("Politecnico di Milano" OR "Sapienza" OR "Scuola Normale")',
            "ringgold_ids": {
                "MIT": "2167",
                "Politecnico_Milano": "14733",
                "Sapienza": "7985"
            }
        },
        "italy_to_mit": {
            "description": "Italian researchers now at MIT",
            "advanced_search": 'past-institution-affiliation-name:("Politecnico di Milano" OR "Sapienza") AND current-institution-affiliation-name:"MIT"'
        },
        "dual_affiliations": {
            "description": "Researchers with both US and Italian affiliations",
            "advanced_search": 'current-institution-affiliation-name:"MIT" AND current-institution-affiliation-name:"Politecnico di Milano"'
        }
    }

    return queries

def generate_patent_queries():
    """Generate patent collaboration queries."""

    patent_queries = {
        "google_patents": [
            {
                "url": "https://patents.google.com",
                "query": 'assignee:"Massachusetts Institute of Technology" inventor:Italy',
                "description": "MIT patents with Italian co-inventors"
            },
            {
                "query": 'assignee:"Politecnico di Milano" inventor:"United States"',
                "description": "Politecnico patents with US co-inventors"
            },
            {
                "query": 'assignee:Leonardo assignee:("Boeing" OR "Lockheed" OR "Raytheon")',
                "description": "Joint patents between Leonardo and US defense primes"
            }
        ],
        "uspto": [
            {
                "url": "https://patft.uspto.gov/netahtml/PTO/search-adv.htm",
                "query": 'AN/"Massachusetts Institute of Technology" AND IC/Italy',
                "description": "USPTO search for MIT-Italy collaborations"
            }
        ]
    }

    return patent_queries

def create_extraction_guide():
    """Create comprehensive extraction guide."""

    guide = {
        "generated": datetime.now().isoformat(),
        "priority_order": [
            "Scopus - Academic papers",
            "Google Scholar - Recent publications",
            "ORCID - Researcher movements",
            "Patents - Technology transfer"
        ],
        "scopus": generate_scopus_queries(),
        "google_scholar": generate_google_scholar_queries(),
        "orcid": generate_orcid_queries(),
        "patents": generate_patent_queries(),
        "key_researchers_to_track": [
            {
                "name": "Dirk Englund",
                "affiliation": "MIT",
                "department": "Research Laboratory of Electronics",
                "focus": "Quantum photonics",
                "check_for": "Collaborations with Politecnico DEIB"
            },
            {
                "name": "Lorenzo Pavesi",
                "affiliation": "University of Trento (Italy)",
                "focus": "Silicon photonics",
                "check_for": "MIT collaborations"
            }
        ],
        "data_extraction_steps": [
            "1. Run Scopus queries and export to CSV",
            "2. Extract author affiliations and email domains",
            "3. Map co-authorship networks",
            "4. Identify joint grants/projects",
            "5. Track researcher movements via ORCID",
            "6. Extract patent co-inventorship"
        ]
    }

    output_file = OUTPUT_DIR / "researcher_collaboration_extraction_guide.json"
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(guide, f, indent=2)

    print(f"‚úì Saved extraction guide to {output_file}")

    return guide

def create_linkedin_search_queries():
    """Create LinkedIn search queries for talent tracking."""

    linkedin_queries = [
        {
            "platform": "LinkedIn Sales Navigator",
            "current_company": "Leonardo DRS",
            "past_company": "Raytheon OR Lockheed Martin OR Boeing",
            "location": "United States",
            "seniority": "Director OR VP OR CTO",
            "purpose": "Track US defense personnel at Italian subsidiaries"
        },
        {
            "current_company": "MIT OR Stanford OR Carnegie Mellon",
            "past_company": "Politecnico di Milano OR Sapienza",
            "keywords": "quantum OR photonics OR AI",
            "purpose": "Italian researchers now at US institutions"
        },
        {
            "current_company": "Politecnico di Milano",
            "past_company": "MIT",
            "purpose": "US-trained researchers returned to Italy"
        }
    ]

    return linkedin_queries

if __name__ == "__main__":
    print("=" * 60)
    print("MIT-Politecnico Research Collaboration Mapper")
    print("=" * 60)

    # Generate extraction guide
    guide = create_extraction_guide()

    # Generate LinkedIn queries
    linkedin = create_linkedin_search_queries()

    print("\nüìã IMMEDIATE SEARCH TASKS:")
    print("-" * 40)

    # Scopus priority
    print("\n1. SCOPUS (Priority #1):")
    print("   Basic Query: AFFIL(MIT) AND AFFIL(\"Politecnico di Milano\")")
    print("   Date Range: 2020-2025")
    print("   Export: Full records with abstracts")

    # Google Scholar
    print("\n2. GOOGLE SCHOLAR:")
    gs_queries = generate_google_scholar_queries()
    for q in gs_queries[:2]:
        print(f"   - {q['description']}")
        print(f"     URL: {q['url']}")

    # ORCID
    print("\n3. ORCID Researcher Tracking:")
    print("   Search: https://orcid.org/orcid-search/search")
    print("   Query: past-institution:\"MIT\" current-institution:\"Politecnico\"")

    # Patents
    print("\n4. Patent Collaboration:")
    print("   Google Patents: https://patents.google.com")
    print("   Query: assignee:MIT inventor:Italy")

    # LinkedIn
    print("\n5. LinkedIn Talent Mapping:")
    for lq in linkedin[:2]:
        print(f"   - Current: {lq['current_company']}")
        print(f"     Past: {lq['past_company']}")

    print(f"\n‚úÖ Full extraction guide saved to:")
    print(f"   {OUTPUT_DIR / 'researcher_collaboration_extraction_guide.json'}")

    print("\n‚è±Ô∏è Estimated time for initial extraction: 3-4 hours")
    print("üéØ Focus on quantum computing and AI collaborations first")
