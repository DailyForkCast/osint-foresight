{
  "permissions": {
    "allow": [
      "Read(//c/Users/mrear/Downloads/**)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/new_country.sh:*)",
      "Bash(test:*)",
      "Bash(if command -v conda)",
      "Bash(/dev/null)",
      "Bash(then echo \"using conda\")",
      "Bash(else echo \"using venv\")",
      "Bash(fi)",
      "Bash(git commit:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(python:*)",
      "Bash(make:*)",
      "Bash(git rm:*)",
      "Bash(for file in phase2s_supply_chain.py phase3_institutions.py phase4_funders.py phase5_links.py phase6_risk.py phase7c_posture.py phase8_foresight.py policy_brief.py)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(grep:*)",
      "Bash(done)",
      "WebFetch(domain:example.com)",
      "WebFetch(domain:httpbin.org)",
      "Bash(node:*)",
      "Bash(java:*)",
      "Bash(gcc:*)",
      "Bash(choco install:*)",
      "Bash(winget install:*)",
      "Bash(winget search:*)",
      "Bash(pip install:*)",
      "Bash(echo $PATH)",
      "Read(//c/Program Files/Java/**)",
      "Bash(\"/c/Program Files/Java/jre1.8.0_461/bin/java\" -version)",
      "Read(//c/Program Files/**)",
      "Bash(where gcc)",
      "Bash(where:*)",
      "Read(//c/Users/mrear/AppData/Local/Programs/**)",
      "Read(//c/ProgramData/**)",
      "Bash(winget list:*)",
      "Read(//c/c/**)",
      "Bash(powershell:*)",
      "Bash(winget uninstall:*)",
      "Bash(export:*)",
      "Bash(for:*)",
      "Bash(do if [ \"$file\" != \"Master_Prompt_vNext_Claude_Updates_FINAL.md\" ])",
      "Bash([ -f \"$file\" ])",
      "Bash(then mv \"$file\" archive/)",
      "Bash(echo \"Moved: $file\")",
      "Bash(do if [ -f \"$file\" ])",
      "WebSearch",
      "Bash(cd:*)",
      "Bash(unzip:*)",
      "Bash(cat:*)",
      "Read(//c/Projects/**)",
      "Bash(mv:*)",
      "Bash(head:*)",
      "Bash(while read file)",
      "Bash(gcloud auth:*)",
      "Read(//c/Program Files (x86)/Google/**)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" auth list)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" config get-value project)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" projects list)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" config set project osint-foresight-2025)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" services enable bigquery.googleapis.com)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" services list --enabled --filter=\"name:bigquery\")",
      "Bash(bq mk:*)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/bq\" mk --dataset --location=US --description=\"OSINT Foresight Analysis Dataset for multi-country technology assessment\" osint-foresight-2025:main_analysis)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" auth application-default login)",
      "WebFetch(domain:docs.openalex.org)",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" projects describe osint-foresight-2025 --format=\"value(projectNumber,projectId)\")",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gcloud\" compute project-info describe --project=osint-foresight-2025 --format=\"table(quotas[].metric,quotas[].limit)\")",
      "Bash(\"$HOME/AppData/Local/Google/Cloud SDK/google-cloud-sdk/bin/gsutil\" mb -p osint-foresight-2025 -l US -c STANDARD gs://osint-foresight-2025-backups)",
      "Bash(echo \"Archived: $file\")",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Bash(curl:*)",
      "Bash(pre-commit:*)",
      "Bash(awk:*)",
      "Read(//f//**)",
      "Bash(robocopy:*)"
    ],
    "deny": [],
    "ask": []
  }
}
